package 接口2;
/**
 * @author 崔秦
 * 
 * 	接口和抽象类都不能实例化，位于继承树的顶端，用于被其他类实现	
 *	借口和抽象类都可以包含抽象方法，而实现借口和继承抽象类的子类都要必须实现这些抽象方法。
 *
 *	区别
 *		接口作为的是系统与外界交互的窗口，是一种规范。接口规定了调用者可以调用那些服务以及如何调用这些服务(方法)
 *		使用接口，借口是多个模块之间的耦合标准，多个应用程序直接使用借口是，接口是多个程序直接的通行标准
 *		接口类似于系统的总纲，制定了系统各模块应该遵循的标准，借口不应该经常改写，否则对系统都是辐射性的影响，打部分类都要改变
 *		抽象类是作为一些类的共同父亲，体现的是一种模板设计，作为多个子类的抽象父类，可以被当成系统实现过程中的中间产品，中间产品已经实现了部分功能，
 *		但是仍然需要许多改进，不能作为最终产品，这种改进可能需要几种不同的方式
 *
 *	用法上面的差别
 *		接口只能包含抽象方法，默认方法，不能使用普通方法提供方法实现：抽象类完全可以包含普通方法
 *		接口只能定义静态常量，不能定义普通成员变量；抽象类里面既可以定义普通成员变量，又可以定义静态常量
 *		接口不包含构造器；抽象类可以包含构造器，抽象类里面的构造器不是用于创建对象，而是让其子类调用这些构造器来完成属于抽象类的初始化操作
 *		接口里莫得初始化块；抽象类则完全可以包含初始化块
 *		一个类最多只能有一个直接父类，包括抽象类；而一个类可以直接实现多个接口，通过实现多个接口可以模拟多继承(弥补java的单继承的不足)
 */	
public class 接口和抽象类 {
	
}
